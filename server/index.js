const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors());
app.use(express.json());

// MongoDB connection
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/fullstack-demo', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const db = mongoose.connection;
db.on('error', console.error.bind(console, 'MongoDB connection error:'));
db.once('open', () => {
  console.log('Connected to MongoDB database');
});

// Basic health check endpoint
app.get('/api/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    message: 'Server is running', 
    timestamp: new Date().toISOString(),
    environment: process.env.NODE_ENV || 'development'
  });
});

// API routes
app.get('/api/users', (req, res) => {
  res.json({ 
    message: 'Users endpoint - ready for implementation',
    generated_by: 'Claude-Flow MCP Tools',
    features: ['User registration', 'Authentication', 'Profile management']
  });
});

app.get('/api/data', (req, res) => {
  res.json({
    message: 'Data endpoint - demonstrating full-stack integration',
    sample_data: [
      { id: 1, name: 'React Component', type: 'Frontend' },
      { id: 2, name: 'Express Server', type: 'Backend' },
      { id: 3, name: 'MongoDB Database', type: 'Database' },
      { id: 4, name: 'Claude-Flow Automation', type: 'DevOps' }
    ],
    timestamp: new Date().toISOString()
  });
});

// 404 handler
app.use('*', (req, res) => {
  res.status(404).json({ 
    error: 'Route not found',
    available_endpoints: ['/api/health', '/api/users', '/api/data']
  });
});

// Error handling middleware
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ 
    error: 'Something went wrong!',
    message: process.env.NODE_ENV === 'development' ? err.message : 'Internal server error'
  });
});

// Start server
app.listen(PORT, () => {
  console.log(`ðŸš€ Server running on port ${PORT}`);
  console.log(`ðŸ“Š Health check: http://localhost:${PORT}/api/health`);
  console.log(`ðŸ”— API base: http://localhost:${PORT}/api`);
  console.log(`âš¡ Generated by Claude-Flow MCP Tools`);
});

module.exports = app;